@model SeaSharpe_CVGS.Models.Review
<!DOCTYPE html>
<html lang="en">
<body>
    <!-- Add review form partial page -->
    <h2>Review Game</h2>

    <!-- using an ajax form so that the post for the partial view is called instead of the parent view-->
    @using (Ajax.BeginForm("PartialCreateReview", "Review", new AjaxOptions { HttpMethod = "Post" }))
    {        
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true)

            <!-- Hidden Element for review id-->
            <!-- note: not using HtmlHelper to prevent GameId from parent view being passed in-->
            <input type="hidden" name="Id" value="@Model.Id" />

            <!-- Hidden element for game Id-->
            @Html.HiddenFor(model => model.Game_Id)

            <!-- Hidden Element for user -->
            @Html.HiddenFor(model => model.Author)


            <!-- Review Subject -->
            <div class="form-group">
                @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Subject)
                    @Html.ValidationMessageFor(model => model.Subject)
                </div>
            </div>

            <!-- Review Body -->
            <div class="form-group">
                @Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Body)
                    @Html.ValidationMessageFor(model => model.Body)
                </div>
            </div>

            <!-- Rating -->
            <div class="form-group">
                @Html.LabelFor(model => model.Rating, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input value="@Model.Rating" type="number" id="Rating" name="Rating" class="rating" min="0" max="5" data-show-Caption="false" data-size="xs" />
                    <script type="text/javascript">$("#Rating").rating()</script>
                    @Html.ValidationMessageFor(model => model.Rating)
                </div>
            </div>
            @if (Model.Aprover != null)
            {
                <span>Your review was not approved by our employees.</span>
            }
            @if (Model.Aprover == null && Model.Subject != null)
            {
                <span>Your review is pending approval from our employees.</span>
            }
            <!-- Submit, Reset, and View Reviews buttons-->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="reset" value="Reset" class="btn btn-default" />
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</body>
</html>