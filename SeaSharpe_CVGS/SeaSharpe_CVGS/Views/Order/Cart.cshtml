@model List<SeaSharpe_CVGS.Models.CartViewModel>

@{
    ViewBag.Title = "Cart";
}
@using (Html.BeginForm("AlterCart", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<h2>Cart</h2>
<table class="table">
    <tr>
        <th>
            Download
        </th>
        <th>
            Hard Copy
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().item.Game.Name)
        </th>
        <th>
            @Html.LabelFor(model => model.First().item.Game.Platform.Name, "Platform")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().item.Game.ESRB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().item.Game.SuggestedRetailPrice)
        </th>
    </tr>


    @for (int i = 0; i < Model.Count(); i++)
    {
        <tr>
            @if (Model[i].item.Game.SuggestedRetailPrice > 0.01m)
            {
                <td>
                    N/A
                    @Html.HiddenFor(model => model[i].download)
                </td>
                <td>
                    @Html.EditorFor(model => model[i].hardCopy)
                </td>
            }
            else
            {
                <td>
                    @Html.EditorFor(model => model[i].download)
                </td>
                <td>
                    N/A
                    @Html.HiddenFor(model => model[i].hardCopy)
                </td>
            }
            <td>
                @Html.DisplayFor(model => model[i].item.Game.Name)
                @Html.HiddenFor(model => model[i].item.OrderId)
                @Html.HiddenFor(model => model[i].item.GameId)
            </td>
            <td>
                @Html.DisplayFor(model => model[i].item.Game.Platform.Name)
            </td>
            <td>
                @Html.DisplayFor(model => model[i].item.Game.ESRB)
            </td>
            <td>
                @Html.DisplayFor(model => model[i].item.Game.SuggestedRetailPrice)
            </td>
        </tr>
    }

</table>
if (TempData["EmptyCart"] != null)
{
    <p>@TempData["EmptyCart"]</p>
    <br/>
}
<input type="submit" name="submit" value="Remove Selected" class="btn btn-primary" />
@(Html.ActionLink("Empty Cart", "DeleteCart", "order", null, new { @class = "btn btn-primary" }))
<br/>
@(Html.ActionLink("Continue Shopping", "Index", "Game", null, new { @class = "btn btn-primary" }))
}

@using (@Html.BeginForm())
{
    <script src="https://checkout.stripe.com/checkout.js" class="stripe-button"
        data-key="@System.Configuration.ConfigurationManager.AppSettings.Get("StripeApiPublicKey")"
        data-amount="@Model.Sum(m => m.item.SalePrice * 100)"
        data-name="ConestogaVideoGameStore"
        data-description="Games ($@Model.Sum(m => m.item.SalePrice))"
        data-image='@Url.Content("~/Content/themes/base/images/logo.png")'
        data-locale="auto"
        data-bitcoin="true">
    </script>
}

@{
    if (ViewBag.StripeCharge != null)
    {
        var stripeCharge = (Stripe.StripeCharge)ViewBag.StripeCharge;
        <h4>
            @string.Format("Order Amount: {0:C}", stripeCharge.Amount / 100m)
        </h4>
        <h4>
            @string.Format("Payment Status: {0}", stripeCharge.Status)
        </h4>
    }
}